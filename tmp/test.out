#*
 * Examples of how to use arrays
 *#

say ["string"];
Token (id=00000, line=00005, pos=0004, type=TT_IDENT, val=say, ival=0, dval=0.000000, refs=1)
Token (id=00001, line=00005, pos=0006, type=TT_PARANT_AL, val=[, ival=0, dval=0.000000, refs=1)
Token (id=00002, line=00005, pos=0006, type=TT_STRING, val=string, ival=0, dval=0.000000, refs=1)
Token (id=00003, line=00005, pos=0008, type=TT_PARANT_AR, val=], ival=0, dval=0.000000, refs=1)
Token (id=00004, line=00005, pos=0009, type=TT_SEMICOLON, val=;, ival=0, dval=0.000000, refs=1)
DEBUG(Track: ./src/core/interpret.c:_program:167)
DEBUG(Token: say)
DEBUG(Track: ./src/core/interpret.c:_statement:432)
DEBUG(Token: say)
DEBUG(Track: ./src/core/interpret.c:_proc_decl:364)
DEBUG(Token: say)
DEBUG(Track: ./src/core/interpret.c:_func_decl:398)
DEBUG(Token: say)
DEBUG(Track: ./src/core/interpret.c:_var_decl:177)
DEBUG(Token: say)
DEBUG(Track: ./src/core/interpret.c:_control:492)
DEBUG(Token: say)
DEBUG(Track: ./src/core/interpret.c:_expression:467)
DEBUG(Token: say)
DEBUG(Track: ./src/core/interpret.c:_compare:627)
DEBUG(Token: say)
DEBUG(Track: ./src/core/interpret.c:_sum:678)
DEBUG(Token: say)
DEBUG(Track: ./src/core/interpret.c:_product:729)
DEBUG(Token: say)
DEBUG(Track: ./src/core/interpret.c:_product2:767)
DEBUG(Token: say)
DEBUG(Track: ./src/core/interpret.c:_term:801)
DEBUG(Token: say)
DEBUG(Track: ./src/core/interpret.c:_compare:627)
DEBUG(Token: [)
DEBUG(Track: ./src/core/interpret.c:_sum:678)
DEBUG(Token: [)
DEBUG(Track: ./src/core/interpret.c:_product:729)
DEBUG(Token: [)
DEBUG(Track: ./src/core/interpret.c:_product2:767)
DEBUG(Token: [)
DEBUG(Track: ./src/core/interpret.c:_term:801)
DEBUG(Token: [)
DEBUG(Track: ./src/core/interpret.c:_compare:627)
DEBUG(Token: string)
DEBUG(Track: ./src/core/interpret.c:_sum:678)
DEBUG(Token: string)
DEBUG(Track: ./src/core/interpret.c:_product:729)
DEBUG(Token: string)
DEBUG(Track: ./src/core/interpret.c:_product2:767)
DEBUG(Token: string)
DEBUG(Track: ./src/core/interpret.c:_term:801)
DEBUG(Token: string)
==>

==>
